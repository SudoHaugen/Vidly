{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/common/protectedRoute.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","utils/paginate.js","components/common/searchBox.jsx","components/movies.jsx","components/customers.jsx","components/rentals.jsx","components/common/navbar.jsx","components/common/not-found.jsx","components/common/input.jsx","components/common/option_input.jsx","components/common/form.jsx","components/movieform.jsx","components/loginForm.jsx","components/registerForm.jsx","components/newMovieForm.jsx","components/logout.jsx","App.js","reportWebVitals.js","index.js"],"names":["init","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","log","error","axios","defaults","baseURL","process","interceptors","response","use","expectedError","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","tokenKey","email","password","a","httpService","data","localStorage","setItem","getJwt","getItem","login","logout","removeItem","getCurrentUser","jwtDecode","ex","loginWithJwt","ProtectedRoute","Component","component","render","rest","props","auth","user","to","pathname","state","from","location","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","className","this","columns","map","onClick","label","key","TableBody","renderCell","item","content","_","createKey","_id","Table","Like","isLiked","liked","style","cursor","MoviesTable","movie","title","onLike","deleteColumn","onDelete","isAdmin","push","movies","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","aria-label","page","href","paginate","pageNumber","startIndex","slice","take","value","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","genres","searchQuery","selectedGenre","handleDelete","setState","history","replace","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSort","getPagedData","allMovies","filtered","filter","m","toLowerCase","startsWith","orderBy","totalCount","length","handleSearch","query","then","authService","Customers","Rentals","NavBar","data-toggle","data-target","aria-controls","aria-expanded","id","Fragment","NotFound","Input","defaultValue","options","htmlFor","Option_input","currentValue","selected","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","property","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","handleSearchInput","disabled","focus","autoFocus","MovieForm","activeGenre","numberInStock","rate","numbersInStock","string","required","array","number","min","max","populateMovie","match","params","dailyRentalRate","populateGenres","find","g","genreId","onSubmit","renderInput","renderOptionInput","renderButton","loginForm","window","username","registerForm","minDomainSegments","tilds","allow","usersAPI","NewMovieForm","tile","Logout","console","REACT_APP_NAME","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b6f9c90c.chunk.js","sourcesContent":["/**@format */\r\nimport * as Sentry from \"@sentry/react\";\r\nimport { Integrations } from \"@sentry/tracing\";\r\n\r\nfunction init() {\r\n  Sentry.init({\r\n    dsn:\r\n      \"https://11525bd4b62e454c8748e5a9e04369e1@o512115.ingest.sentry.io/5679589\",\r\n    integrations: [new Integrations.BrowserTracing()],\r\n\r\n    // We recommend adjusting this value in production, or using tracesSampler\r\n    // for finer control\r\n    tracesSampleRate: 1.0,\r\n  });\r\n}\r\n\r\nfunction log(error) {\r\n  Sentry.captureException(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log,\r\n};\r\n","/**@format */\r\nimport axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  logger.log(error);\r\n  toast.error(\"Error occured with code: \" + error.response.status);\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occured\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n};\r\n","/**@format */\r\n\r\nimport httpService from \"../services/httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst tokenKey = \"token\";\r\n\r\nhttpService.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await httpService.post(\"/auth\", { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    const user = jwtDecode(jwt);\r\n    return user;\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  loginWithJwt,\r\n  getJwt,\r\n};\r\n","/**@format */\r\n\r\nimport React from \"react\";\r\nimport auth from \"../../services/authService\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? (\r\n          <Component {...props} user={auth.getCurrentUser()} />\r\n        ) : (\r\n          render(props)\r\n        );\r\n      }}\r\n    ></Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\r\n\r\n// columns: array\r\n// sortColumn: object\r\n// onSort: function\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nconst Like = ({ isLiked, onClick }) => {\r\n    const liked = (isLiked === true ? \"fa fa-heart\" : \"far fa-heart\");\r\n    return (\r\n        <i className={`${liked}`} style={{ cursor: \"pointer\"}} onClick={() => onClick()}></i>\r\n    )\r\n}\r\n\r\nexport default Like;","/**@format */\r\n\r\nimport React, { Component } from \"react\";\r\nimport Table from \"./common/table\";\r\nimport Like from \"./common/like\";\r\nimport { Link } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like isLiked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (movie) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Table\r\n          columns={this.columns}\r\n          data={movies}\r\n          sortColumn={sortColumn}\r\n          onSort={onSort}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  selectedItem,\r\n  onItemSelect\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map(item => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = (props) => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) {\r\n    return null;\r\n  }\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n            onClick={() => {\r\n              onPageChange(page);\r\n            }}\r\n          >\r\n            <a className=\"page-link\" href=\"#\">\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import _ from 'lodash';\r\n\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}","/**@format */\r\n\r\nimport React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","/**@format */\r\n\r\nimport React, { Component } from \"react\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport Pagination from \"./common/pagination\";\r\nimport httpService from \"../services/httpService\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport authService from \"../services/authService\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 3,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const genres = [\r\n      { _id: \"\", name: \"All Genres\" },\r\n      await httpService.get(\"/genres\"),\r\n    ];\r\n\r\n    const movies = await httpService.get(\"/movies\").then((response) => {\r\n      return response.data;\r\n    });\r\n\r\n    this.setState({ movies, genres: genres[1].data });\r\n  }\r\n\r\n  handleDelete = async (movie) => {\r\n    try {\r\n      await httpService.delete(\"/movies\" + `/${movie._id}`);\r\n\r\n      let movies = await httpService.get(\"/movies\");\r\n\r\n      this.setState({ movies: movies.data });\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 404) {\r\n        this.props.history.replace(\"/not-found\");\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param movie\r\n   * Event handler for like button\r\n   * Finds the movie that has been liked and changes its state\r\n   * Adds state: {liked} to movie\r\n   */\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  /**\r\n   * Finds movies to be displayed on each page of the movie search\r\n   * Checks for input in search box\r\n   */\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies,\r\n    } = this.state;\r\n\r\n    /*Handles search inputs from search box or genre selection\r\n     * Filtering movies based on title or genre and returns result\r\n     */\r\n    let filtered = allMovies;\r\n    if (searchQuery) {\r\n      filtered = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (selectedGenre && selectedGenre._id) {\r\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n    }\r\n\r\n    //Sorting the results based on users input (e.g. desc, asc, liked movies...)\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    //When search result is found pageSize will determin how many results per page will be displayed\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  render() {\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <ListGroup\r\n              items={this.state.genres}\r\n              selectedItem={this.state.selectedGenre}\r\n              onItemSelect={this.handleGenreSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            {authService.getCurrentUser() && (\r\n              <Link to={\"/movies/new\"}>\r\n                <button type=\"button\" className=\"btn btn-primary btn-sm\">\r\n                  New movie\r\n                </button>\r\n              </Link>\r\n            )}\r\n            {`${movies.length}` > 0 ? (\r\n              <p>Showing {`${movies.length}`} movies in the database</p>\r\n            ) : (\r\n              <p>\r\n                There are no movies in the database that matches the search\r\n                result\r\n              </p>\r\n            )}\r\n            <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n            <MoviesTable\r\n              movies={movies}\r\n              sortColumn={sortColumn}\r\n              onLike={this.handleLike}\r\n              onDelete={this.handleDelete}\r\n              onSort={this.handleSort}\r\n            />\r\n\r\n            <Pagination\r\n              itemsCount={totalCount}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={this.handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from 'react';\r\n\r\nconst Customers = () => {\r\n    return ( <h1>Customers</h1> );\r\n}\r\n \r\nexport default Customers;","import React from 'react';\r\n\r\nconst Rentals = () => {\r\n    return ( <h1>Rentals</h1> );\r\n}\r\n \r\nexport default Rentals;","/**@format */\r\n\r\nimport React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( <h1>The page you were looking for does not exists</h1> );\r\n}\r\n \r\nexport default NotFound;","/**@format */\r\n\r\nconst Input = ({ name, label, error, defaultValue, options, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      {label === null ? null : <label htmlFor={name}>{label}</label>}\r\n      <input\r\n        {...rest}\r\n        value={defaultValue}\r\n        name={name}\r\n        id={name}\r\n        className=\"form-control\"\r\n      />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","/**@format */\r\n\r\nconst Option_input = ({ name, label, options, onChange, currentValue }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select\r\n        name={name}\r\n        id={name}\r\n        className=\"form-control\"\r\n        onChange={onChange}\r\n      >\r\n        {options.map((item) => {\r\n          if (item.name === currentValue)\r\n            return (\r\n              <option value={item.name} selected key={item.name}>\r\n                {item.name}\r\n              </option>\r\n            );\r\n          else\r\n            return (\r\n              <option value={item.name} key={item.name}>\r\n                {item.name}\r\n              </option>\r\n            );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Option_input;\r\n","/**@format */\r\n\r\nimport React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Option_input from \"./option_input\";\r\n\r\nclass Form extends Component {\r\n  /**\r\n   * State keeps track for current input from user and generated error messages from Joi\r\n   */\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * Validate all input fields according to Joi Schema.\r\n   * Returns detailed error object if validation fails\r\n   */\r\n  validate = () => {\r\n    const options = { abortEarly: false }; //Set options for Joi validation\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  /**\r\n   * @param name name of attribute being validated\r\n   * @param value value of attribute being validated\r\n   * Creates a new sub schema in order to validate a single form property\r\n   * By using the name of the property being validated we can find its validation logic in the main schema\r\n   */\r\n  validateProperty = ({ name, value }) => {\r\n    const property = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(property, schema);\r\n\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate(); //Returns error object or null\r\n\r\n    /**\r\n     * Set error state and call server if no errors are found\r\n     */\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const data = { ...this.state.data };\r\n    const errorMessage = this.validateProperty(input);\r\n\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  handleSearchInput = ({ currentTarget: input }) => {\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data });\r\n  };\r\n\r\n  renderButton(label, path) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderSearchBar(name, label, focus = false, type = \"text\", options = [\"\"]) {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        placeholder={name}\r\n        defaultValue={data[name]}\r\n        label={label}\r\n        onChange={this.handleSearchInput}\r\n        error={null}\r\n        autoFocus={focus}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderOptionInput(name, label, options, currentValue = \"\") {\r\n    return (\r\n      <Option_input\r\n        name={name}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        currentValue={currentValue}\r\n      />\r\n    );\r\n  }\r\n  renderInput(name, label, focus = false, type = \"text\", options = [\"\"]) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        defaultValue={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        autoFocus={focus}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","/**@format */\r\n\r\nimport React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport httpService from \"../services/httpService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      _id: \"\",\r\n      title: \"\",\r\n      genres: [],\r\n      activeGenre: \"\",\r\n      numberInStock: 0,\r\n      rate: 0,\r\n    },\r\n    errors: { _id: \"\", title: \"\", genre: \"\", numbersInStock: \"\", rate: \"\" },\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string().required(),\r\n    title: Joi.string().required(),\r\n    genres: Joi.array().required(),\r\n    activeGenre: Joi.string().required(),\r\n    numberInStock: Joi.number().min(0).max(100).required(),\r\n    rate: Joi.number().min(0).max(10).required(),\r\n  };\r\n\r\n  populateMovie = async () => {\r\n    const {\r\n      data: { _id, title, genre, numberInStock, dailyRentalRate },\r\n    } = await httpService.get(\"/movies\" + `/${this.props.match.params.id}`);\r\n\r\n    this.setState({\r\n      data: {\r\n        _id,\r\n        title,\r\n        activeGenre: genre.name,\r\n        genres: this.state.data.genres,\r\n        numberInStock,\r\n        rate: dailyRentalRate,\r\n      },\r\n    });\r\n  };\r\n\r\n  populateGenres = async () => {\r\n    const { data } = await httpService.get(\"/genres\");\r\n    const {\r\n      _id,\r\n      title,\r\n      activeGenre,\r\n      numberInStock,\r\n      dailyRentalRate,\r\n    } = this.state.data;\r\n\r\n    this.setState({\r\n      data: {\r\n        _id,\r\n        title,\r\n        activeGenre,\r\n        genres: data,\r\n        numberInStock,\r\n        rate: dailyRentalRate,\r\n      },\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.populateMovie();\r\n    await this.populateGenres();\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    let { _id, title, numberInStock, activeGenre, rate } = this.state.data;\r\n    let { history } = this.props;\r\n    activeGenre = await httpService\r\n      .get(\"/genres\")\r\n      .then((response) => response.data.find((g) => g.name === activeGenre));\r\n\r\n    await httpService.put(\"/movies\" + `/${_id}`, {\r\n      title,\r\n      genreId: activeGenre._id,\r\n      numberInStock,\r\n      dailyRentalRate: rate,\r\n    });\r\n\r\n    history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    let { genres, activeGenre } = this.state.data;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            {this.renderInput(\"title\", \"Title\", false, \"text\")}\r\n            {this.renderOptionInput(\r\n              \"activeGenre\",\r\n              \"Genre\",\r\n              genres,\r\n              activeGenre\r\n            )}\r\n            {this.renderInput(\r\n              \"numberInStock\",\r\n              \"Number in Stock\",\r\n              false,\r\n              \"text\"\r\n            )}\r\n            {this.renderInput(\"rate\", \"Rate\", false, \"text\")}\r\n          </div>\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","/**@format */\r\n\r\nimport React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Redirect } from \"react-router\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass loginForm extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\" },\r\n    errors: { email: \"\", password: \"\" },\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string().required().label(\"email\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const {\r\n        data: { email, password },\r\n      } = this.state;\r\n      await auth.login(email, password);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n        toast.error(errors.username);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"\" />;\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            {this.renderInput(\"email\", \"email\", true)}\r\n            {this.renderInput(\"password\", \"Password\", false, \"password\")}\r\n          </div>\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default loginForm;\r\n","/**@format */\r\n\r\nimport React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport httpService from \"../services/httpService\";\r\nimport { usersAPI } from \"../config.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass registerForm extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\", name: \"\" },\r\n    errors: { email: \"\", password: \"\" },\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string()\r\n      .email({\r\n        minDomainSegments: 2,\r\n        tilds: { allow: [\"com\", \"net\", \"no\"] },\r\n      })\r\n      .min(5)\r\n      .required()\r\n      .label(\"email\"),\r\n    password: Joi.string().min(5).required().label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await httpService.post(usersAPI, this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n        toast.error(errors.username);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            {this.renderInput(\"email\", \"email\", true)}\r\n            {this.renderInput(\"password\", \"Password\", false, \"password\")}\r\n            {this.renderInput(\"name\", \"Name\")}\r\n          </div>\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default registerForm;\r\n","/**@format */\r\nimport React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport httpService from \"../services/httpService\";\r\n\r\nclass NewMovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genres: [],\r\n      activeGenre: null,\r\n      numberInStock: \"\",\r\n      rate: \"\",\r\n    },\r\n    errors: {\r\n      tile: \"\",\r\n      genres: \"\",\r\n      activeGenre: \"\",\r\n      numbersInStock: \"\",\r\n      rate: \"\",\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const genres = await httpService.get(\"/genres\");\r\n    const activeGenre = genres.data[0];\r\n\r\n    this.setState({ data: { genres: genres.data, activeGenre } });\r\n  }\r\n\r\n  schema = {\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genres: Joi.array().required(),\r\n    activeGenre: Joi.string().required(),\r\n    numberInStock: Joi.number().min(0).max(100).required(),\r\n    rate: Joi.number().min(0).max(10).required(),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    let { title, activeGenre, numberInStock, rate, genres } = this.state.data;\r\n    let { history } = this.props;\r\n    activeGenre = genres.find((g) => g.name === activeGenre);\r\n\r\n    await httpService.post(\"/movies\", {\r\n      title,\r\n      genreId: activeGenre._id,\r\n      numberInStock,\r\n      dailyRentalRate: rate,\r\n    });\r\n\r\n    history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    let { genres, activeGenre } = this.state.data;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Create new movie</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            {this.renderInput(\"title\", \"Title\", false, \"text\")}\r\n            {this.renderOptionInput(\r\n              \"activeGenre\",\r\n              \"Genre\",\r\n              genres,\r\n              activeGenre\r\n            )}\r\n            {this.renderInput(\r\n              \"numberInStock\",\r\n              \"Number in Stock\",\r\n              false,\r\n              \"text\"\r\n            )}\r\n            {this.renderInput(\"rate\", \"Rate\", false, \"text\")}\r\n          </div>\r\n          {this.renderButton(\"Save\", \"/movies\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewMovieForm;\r\n","/**@format */\r\n\r\nimport React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","/** @format */\r\nimport React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport ProtectedRoute from \"./components/common/protectedRoute\";\r\nimport Movies from \"./components/movies\";\r\nimport Customers from \"./components/customers\";\r\nimport Rentals from \"./components/rentals\";\r\nimport NavBar from \"./components/common/navbar\";\r\nimport NotFound from \"./components/common/not-found.jsx\";\r\nimport MovieForm from \"./components/movieform\";\r\nimport loginForm from \"./components/loginForm\";\r\nimport registerForm from \"./components/registerForm\";\r\nimport NewMovieForm from \"./components/newMovieForm\";\r\nimport Logout from \"./components/logout\";\r\nimport auth from \"./services/authService\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconsole.log(\"SUPERMAN\", process.env.REACT_APP_NAME);\r\nclass App extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    const user = auth.getCurrentUser();\r\n\r\n    this.setState({ user });\r\n  }\r\n  render() {\r\n    const { user } = this.state;\r\n    return (\r\n      <main className=\"container\">\r\n        <ToastContainer />\r\n        <NavBar user={user} />\r\n        <Switch>\r\n          <ProtectedRoute path=\"/movies/new\" exact component={NewMovieForm} />\r\n          <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\r\n          <ProtectedRoute path=\"/logout\" exact component={Logout} />\r\n          <Route path=\"/movies\" exact component={Movies} />\r\n          <Route path=\"/login\" component={loginForm}></Route>\r\n          <Route path=\"/register\" component={registerForm}></Route>\r\n          <Route path=\"/customers\" exact component={Customers} />\r\n          <Route path=\"/rentals\" exact component={Rentals} />\r\n          <Route path=\"/not-found\" component={NotFound} />\r\n          <Redirect from=\"/\" exact to=\"/movies\" />\r\n          <Redirect to=\"/not-found\" />\r\n        </Switch>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport logger from \"./services/logService\";\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\n\r\nlogger.init();\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}